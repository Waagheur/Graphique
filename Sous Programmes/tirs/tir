  img = IMG_Load("./Images/laser.png");
	rgbImg = SDL_ConvertSurfaceFormat(img, SDL_PIXELFORMAT_RGBA32, 0);
	SDL_FreeSurface(img);
	
	GLuint textureRAY;
	glGenTextures(1, &textureRAY);
	glBindTexture(GL_TEXTURE_2D, textureRAY);
	
	glTexParameteri(GL_TEXTURE_2D, GL_TEXTURE_MIN_FILTER, GL_LINEAR);
	glTexParameteri(GL_TEXTURE_2D, GL_TEXTURE_MAG_FILTER, GL_LINEAR);
	
	glTexParameteri(GL_TEXTURE_2D, GL_TEXTURE_WRAP_S, GL_REPEAT);
	glTexParameteri(GL_TEXTURE_2D, GL_TEXTURE_WRAP_T, GL_REPEAT);
	
	glTexImage2D(GL_TEXTURE_2D, 0, GL_RGBA8, rgbImg->w, rgbImg->h, 0, GL_RGBA, GL_UNSIGNED_BYTE, (GLvoid*)rgbImg->pixels);
	
	glGenerateMipmap(GL_TEXTURE_2D);
	
	SDL_FreeSurface(rgbImg);
    
    FILE* vertFile = fopen("./Shaders/color.vert", "r");
    FILE* fragFile = fopen("./Shaders/color.frag", "r");
    
  Material LASER = {textureRAY, 1.0, 0.0, 0.0, 0.0};
  
  Object RAY;
	RAY.VBOID = cylinderBuffer;
	RAY.matrix = glm::mat4(1.0);
	RAY.shape = &cylinder;
	RAY.shader = shader;
	RAY.material = &LASER;
	RAY.hitBox[0] = glm::vec3(0.0,0.0,0.0);
	RAY.hitBox[1] = glm::vec3(0.0,0.0,0.0);
	RAY.hitBox[2] = glm::vec3(0.0,0.0,0.0);
	RAY.hitBox[3] = glm::vec3(0.0,0.0,0.0);
	RAY.hitBox[4] = glm::vec3(0.0,0.0,0.0);
	RAY.hitBox[5] = glm::vec3(0.0,0.0,0.0);
	RAY.hitBox[6] = glm::vec3(0.0,0.0,0.0);
	RAY.hitBox[7] = glm::vec3(0.0,0.0,0.0);
  
  //Variables de position pour le tir
	glm::vec3 tirpos;
	glm::vec3 tirdes;
	glm::vec3 center;
	float tirdir[2];
	int cliccd = 0;
