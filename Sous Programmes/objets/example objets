Material truc = {textureID, 0.2, 0.5, 0.4, 50.0};
	
	Light light = {{0.0, 100.0, -5.0}, {0.0, 1.0, 1.0}};
	
	Object Body;
	Body.VBOID = cubeBuffer;
	Body.matrix = glm::mat4(1.0);
	Body.matrix = glm::translate(Body.matrix, glm::vec3(0.0f, 0.0f, -5.0f));
	Body.shape = &cube;
	Body.shader = shader;
	Body.material = &truc;
	Body.hitBox[0] = glm::vec3(-0.5, -0.5, -0.5);
	Body.hitBox[1] = glm::vec3(-0.5, -0.5, 0.5);
	Body.hitBox[2] = glm::vec3(0.5, -0.5, 0.5);
	Body.hitBox[3] = glm::vec3(0.5, -0.5, -0.5);
	Body.hitBox[4] = glm::vec3(-0.5, 0.5, -0.5);
	Body.hitBox[5] = glm::vec3(-0.5, 0.5, 0.5);
	Body.hitBox[6] = glm::vec3(0.5, 0.5, 0.5);
	Body.hitBox[7] = glm::vec3(0.5, 0.5, -0.5);
	
	Object Head;
	Head.VBOID = sphereBuffer;
	Head.matrix = glm::mat4(1.0);
	Head.matrix = glm::translate(Head.matrix, glm::vec3(0.0, 1.0, 0.0));
	Head.shape = &sphere;
	Head.shader = shader;
	Head.material = &truc;
	Head.hitBox[0] = glm::vec3(-0.5, -0.5, -0.5);
	Head.hitBox[1] = glm::vec3(-0.5, -0.5, 0.5);
	Head.hitBox[2] = glm::vec3(0.5, -0.5, 0.5);
	Head.hitBox[3] = glm::vec3(0.5, -0.5, -0.5);
	Head.hitBox[4] = glm::vec3(-0.5, 0.5, -0.5);
	Head.hitBox[5] = glm::vec3(-0.5, 0.5, 0.5);
	Head.hitBox[6] = glm::vec3(0.5, 0.5, 0.5);
	Head.hitBox[7] = glm::vec3(0.5, 0.5, -0.5);
	Body.children.push_back(&Head);
